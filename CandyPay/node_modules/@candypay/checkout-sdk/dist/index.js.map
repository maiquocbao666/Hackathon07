{"version":3,"sources":["../src/index.ts","../src/modules/session.ts","../src/constants/urls.ts","../src/constants/tokens.ts","../src/utils/solana.ts","../src/utils/paymentURL.ts","../src/generated-config.ts","../src/modules/intent.ts","../src/sdk.ts","../src/helpers/webhook.ts"],"sourcesContent":["export * from \"./sdk\";\nexport * from \"./helpers\";\nexport * from \"./interfaces\";\nexport * from \"./types\";\nexport * from \"./utils\";\nexport * from \"./generated-config\";\nexport * from \"./utils/paymentURL\";\n","import axios from \"axios\";\n\nimport {\n  Config,\n  CreateSessionOptions,\n  CreateSessionResponse,\n  SessionMetadataOptions,\n  SessionMetadataResponse,\n} from \"@/interfaces\";\nimport { returnPaymentURL } from \"@/utils\";\nimport { CANDYPAY_API_URL } from \"../generated-config\";\n\nexport class Session {\n  private network: string;\n  private options: Config;\n\n  constructor(network: string, options: Config) {\n    this.network = network;\n    this.options = options;\n  }\n\n  /**\n   * Create a new checkout session\n   *\n   * @returns\n   * Returns checkout session object along with `order_id` and `payment_url`\n   * @see\n   * https://docs.candypay.fun/checkout/node-sdk.html#create\n   * @example\n   * ```ts\n   * const hipBagItem = {\n   *   name: \"Throwback Hip Bag\",\n   *   price: 4,\n   *   image: \"https://imgur.com/EntGcVQ.png\",\n   *   quantity: 5\n   * }\n   *\n   * const session = await candypay.session.create({\n   *   success_url: \"https://your-website.com/checkout/success\",\n   *   cancel_url: \"https://your-website.com/checkout/cancel\",\n   *   tokens: [\"samo\", \"shdw\"],\n   *   items: [hipBagItem],\n   *   shipping_fees: 0.43\n   * })\n   *\n   * const paymentURL = session.redirect_url\n   * ```\n   */\n  async create(options: CreateSessionOptions): Promise<CreateSessionResponse> {\n    try {\n      const parameters = {\n        ...options,\n        network: this.network,\n        config: this.options.config,\n      };\n      let response = await axios.post(\n        `${CANDYPAY_API_URL}/session`,\n        parameters,\n        {\n          headers: {\n            Authorization: `Bearer ${this.options.api_keys.private_api_key}`,\n          },\n        }\n      );\n\n      response.data.payment_url = returnPaymentURL(\n        response.data.session_id,\n        this.options.api_keys.public_api_key\n      );\n      return response.data;\n    } catch (err) {\n      throw new Error(JSON.stringify(err.response.data, null, 2));\n    }\n  }\n\n  /**\n   * Fetch metadata of a checkout session\n   * @see\n   * https://docs.candypay.fun/checkout/node-sdk.html#metadata\n   * @example\n   * ```ts\n   * const sessionID = \"cp_pay_34059991-d572-46db-bd1c-225e467ee414\"\n   *\n   * const metadata = await candypay.session.metadata({\n   *   session_id: sessionID\n   * })\n   * ```\n   */\n  async metadata(\n    options: SessionMetadataOptions\n  ): Promise<SessionMetadataResponse> {\n    try {\n      let response = await axios.get(`${CANDYPAY_API_URL}/session`, {\n        params: {\n          session_id: options.session_id,\n        },\n        headers: {\n          Authorization: `Bearer ${this.options.api_keys.public_api_key}`,\n        },\n      });\n\n      response.data.payment_url = returnPaymentURL(\n        response.data.session_id,\n        this.options.api_keys.public_api_key\n      );\n      return response.data;\n    } catch (err) {\n      throw new Error(JSON.stringify(err.response.data, null, 2));\n    }\n  }\n\n  /**\n   * Generate payment URL for a provided session ID\n   * @see\n   * https://docs.candypay.fun/checkout/node-sdk.html#generateredirecturl\n   * @example\n   * ```ts\n   * const sessionID = \"cp_pay_34059991-d572-46db-bd1c-225e467ee414\";\n   *\n   * const paymentURL = candypay.session.generatePaymentURL({\n   *   session_id: sessionID\n   * })\n   * ```\n   */\n  generatePaymentURL(options: { session_id: string }): string {\n    return returnPaymentURL(\n      options.session_id,\n      this.options.api_keys.public_api_key\n    );\n  }\n}\n","export const CONVOY_API_URL = \"https://dashboard.getconvoy.io/api/v1\";\nexport const REDIRECT_URL = \"https://checkout.candypay.fun\";\n","import { SupportedSplTokens } from \"@/types\";\n\nexport const tokens = new Map<SupportedSplTokens | \"sol\" | \"usdc\", string>([\n  [\"sol\", \"So11111111111111111111111111111111111111112\"],\n  [\"usdc\", \"EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v\"],\n  [\"dust\", \"DUSTawucrTsGU8hcqRdHDCbuYhCPADMLM2VcCb8VnFnQ\"],\n  [\"samo\", \"7xKXtg2CW87d97TXJSDpbD5jBkheTqA83TZRuJosgAsU\"],\n  [\"shdw\", \"SHDWyBxihqiCj6YekG2GUr7wqKLeLAMK1gHZck9pL6y\"],\n  [\"bonk\", \"DezXAZ8z7PnrnRJjz3wXBoRgixCa6xjnB7YaB1pPB263\"],\n]);\n","import { tokens } from \"@/constants\";\nimport { SupportedSplTokens } from \"@/types\";\n\nexport const getSupportedTokenMintAddress = (\n  token: SupportedSplTokens | \"sol\" | \"usdc\"\n) => {\n  return tokens.get(token);\n};\n\n","import { deflate } from \"pako\";\n\nimport { REDIRECT_URL } from \"@/constants\";\n\nexport const returnPaymentURL = (sessionId: string, publicApiKey: string) => {\n  const payload = {\n    sessionId,\n    publicApiKey,\n  };\n\n  const compressed = deflate(JSON.stringify(payload));\n  const base64 = Buffer.from(compressed).toString(\"base64\");\n  const url_safe_base64 = encodeURIComponent(base64);\n\n  return `${REDIRECT_URL}/pay?data=${url_safe_base64}`;\n};\n","////////////////////////////////////////////////////////////////////////////////\n// This file is generated via a pre-build step via scripts/config.sh.\n////////////////////////////////////////////////////////////////////////////////\n\nexport const CANDYPAY_CONFIG_VERSION: \"development\" | \"production\" | string = \"production\";\nexport const CANDYPAY_API_URL = \"https://candypay-checkout-production.up.railway.app/api/v1\"\n\n","import axios from \"axios\";\n\nimport {\n  Config,\n  CreateIntentOptions,\n  CreateIntentResponse,\n  IntentMetadataOptions,\n  IntentMetadataResponse,\n} from \"@/interfaces\";\nimport { CANDYPAY_API_URL } from \"../generated-config\";\n\nexport class PaymentIntent {\n  private network: string;\n  private options: Config;\n\n  constructor(network: string, options: Config) {\n    this.network = network;\n    this.options = options;\n  }\n\n  /**\n   * Create a new payment intent\n   *\n   * @returns\n   * Returns payment intent object along with `order_id`, `intent_id` and `intent_secret_key`\n   * @example\n   * ```ts\n   * const hipBagItem = {\n   *   name: \"Throwback Hip Bag\",\n   *   price: 4,\n   *   image: \"https://imgur.com/EntGcVQ.png\",\n   *   quantity: 5\n   * }\n   *\n   * const session = await candypay.paymentIntent.create({\n   *   tokens: [\"samo\", \"shdw\"],\n   *   items: [hipBagItem],\n   * })\n   * ```\n   */\n  async create(options: CreateIntentOptions): Promise<CreateIntentResponse> {\n    try {\n      const parameters = {\n        ...options,\n        network: this.network,\n        config: this.options.config,\n        is_intent: true,\n      };\n      let response = await axios.post(\n        `${CANDYPAY_API_URL}/intent`,\n        parameters,\n        {\n          headers: {\n            Authorization: `Bearer ${this.options.api_keys.private_api_key}`,\n          },\n        }\n      );\n\n      return response.data;\n    } catch (err) {\n      throw new Error(JSON.stringify(err.response.data, null, 2));\n    }\n  }\n\n  /**\n   * Fetch metadata of a payment intent\n   * @example\n   * ```ts\n   * const intentID = \"cp_pay_34059991-d572-46db-bd1c-225e467ee414\"\n   *\n   * const metadata = await candypay.paymentIntent.metadata({\n   *   intent_id: intentID\n   * })\n   * ```\n   */\n  async metadata(\n    options: IntentMetadataOptions\n  ): Promise<IntentMetadataResponse> {\n    try {\n      let response = await axios.get(`${CANDYPAY_API_URL}/intent`, {\n        params: {\n          intent_id: options.intent_id,\n        },\n        headers: {\n          Authorization: `Bearer ${this.options.api_keys.public_api_key}`,\n        },\n      });\n\n      return response.data;\n    } catch (err) {\n      throw new Error(JSON.stringify(err.response.data, null, 2));\n    }\n  }\n}\n","import { Session, PaymentIntent } from \"./modules\";\nimport { Config } from \"./interfaces\";\n\nexport class CandyPay {\n  public session: Session;\n  public paymentIntent: PaymentIntent;\n\n  constructor(options: Config) {\n    this.session = new Session(options.network, options);\n    this.paymentIntent = new PaymentIntent(options.network, options);\n  }\n}\n","import { Webhook as SvixWebhook } from \"svix\";\nimport { WebhookVerifyOptions } from \"@/interfaces\";\n\nexport const verifyWebhookSignature = async (options: WebhookVerifyOptions) => {\n  const svixWebhook = new SvixWebhook(options.webhook_secret);\n  try {\n    await svixWebhook.verify(options.payload, options.headers);\n  } catch (err) {\n    throw new Error(\"Invalid webhook signature\");\n  }\n};\n"],"mappings":"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","names":["src_exports","__export","CANDYPAY_API_URL","CANDYPAY_CONFIG_VERSION","CandyPay","getSupportedTokenMintAddress","returnPaymentURL","verifyWebhookSignature","__toCommonJS","import_axios","REDIRECT_URL","tokens","Map","getSupportedTokenMintAddress","__name","token","tokens","get","import_pako","returnPaymentURL","__name","sessionId","publicApiKey","compressed","deflate","JSON","stringify","payload","base64","Buffer","from","toString","url_safe_base64","encodeURIComponent","REDIRECT_URL","CANDYPAY_CONFIG_VERSION","CANDYPAY_API_URL","Session","constructor","network","options","create","parameters","__spreadProps","__spreadValues","config","response","axios","post","CANDYPAY_API_URL","headers","Authorization","api_keys","private_api_key","data","payment_url","returnPaymentURL","session_id","public_api_key","err","Error","JSON","stringify","metadata","get","params","generatePaymentURL","import_axios","PaymentIntent","constructor","network","options","create","parameters","__spreadProps","__spreadValues","config","is_intent","axios","post","CANDYPAY_API_URL","headers","Authorization","api_keys","private_api_key","data","err","Error","JSON","stringify","response","metadata","get","params","intent_id","public_api_key","CandyPay","constructor","options","session","paymentIntent","Session","network","PaymentIntent","import_svix","verifyWebhookSignature","__name","options","svixWebhook","SvixWebhook","webhook_secret","verify","payload","headers","err","Error"]}